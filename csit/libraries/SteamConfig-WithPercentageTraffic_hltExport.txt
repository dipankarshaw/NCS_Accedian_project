############# Spirent HLTAPI Export Log File #############
#puts "source hltapi_5.10_stc_2.10.tcl"
#source  hltapi_5.10_stc_2.10.tcl
puts "package require SpirentHltApi"
package require SpirentHltApi
set logged_ret "{status 1}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::connect -device 10.91.113.124 -port_list {7/7 8/10} -break_locks 1 -offline 0"
set ret [sth::connect -device 10.91.113.124 -port_list {7/7 8/10} -break_locks 1 -offline 0]
set logged_ret "{offline 0} {port_handle {{10 {{91 {{113 {{124 {{7/7 port1} {8/10 port2}}}}}}}}}}} {status 1}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::interface_config -mode config -port_handle port1 -create_host false -intf_mode ethernet -phy_mode fiber -scheduling_mode RATE_BASED -port_loadunit PERCENT_LINE_RATE -port_load 50 -enable_ping_response 0 -control_plane_mtu 1500 -flow_control false -speed ether10000 -data_path_mode normal -autonegotiation 1"
set ret [sth::interface_config -mode config -port_handle port1 -create_host false -intf_mode ethernet -phy_mode fiber -scheduling_mode RATE_BASED -port_loadunit PERCENT_LINE_RATE -port_load 50 -enable_ping_response 0 -control_plane_mtu 1500 -flow_control false -speed ether10000 -data_path_mode normal -autonegotiation 1]
set logged_ret "{arpnd_status 1} {arpnd_cache none} {arpnd_report none} {status 1} {handles 0}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::interface_config -mode config -port_handle port2 -create_host false -intf_mode ethernet -phy_mode copper -scheduling_mode RATE_BASED -port_loadunit PERCENT_LINE_RATE -port_load 50 -enable_ping_response 0 -control_plane_mtu 1500 -speed ether1000 -autonegotiation 1 -duplex full"
set ret [sth::interface_config -mode config -port_handle port2 -create_host false -intf_mode ethernet -phy_mode copper -scheduling_mode RATE_BASED -port_loadunit PERCENT_LINE_RATE -port_load 50 -enable_ping_response 0 -control_plane_mtu 1500 -speed ether1000 -autonegotiation 1 -duplex full]
set logged_ret "{arpnd_status 1} {arpnd_cache none} {arpnd_report none} {status 1} {handles 0}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::traffic_config -mode create -port_handle port1 -l2_encap ethernet_ii_vlan -vlan_outer_tpid 34984 -vlan_id_outer 2405 -vlan_outer_user_priority 3 -vlan_tpid 33024 -vlan_id 2305 -vlan_user_priority 2 -mac_src 00:10:94:00:00:02 -mac_dst 01:00:5E:0B:01:02 -enable_control_plane 0 -l3_length 4978 -name Test_StreamBlock -fill_type constant -fcs_error 0 -fill_value 0 -frame_size 9100 -traffic_state 1 -high_speed_result_analysis 1 -length_mode fixed -dest_port_list port2 -tx_port_sending_traffic_to_self_en false -disable_signature 0 -enable_stream_only_gen 1 -pkts_per_burst 1 -inter_stream_gap_unit bytes -burst_loop_count 30 -transmit_mode continuous -inter_stream_gap 12 -rate_mbps 98 -enable_stream false"
set ret [sth::traffic_config -mode create -port_handle port1 -l2_encap ethernet_ii_vlan -vlan_outer_tpid 34984 -vlan_id_outer 2405 -vlan_outer_user_priority 3 -vlan_tpid 33024 -vlan_id 2305 -vlan_user_priority 2 -mac_src 00:10:94:00:00:02 -mac_dst 01:00:5E:0B:01:02 -enable_control_plane 0 -l3_length 4978 -name Test_StreamBlock -fill_type constant -fcs_error 0 -fill_value 0 -frame_size 9100 -traffic_state 1 -high_speed_result_analysis 1 -length_mode fixed -dest_port_list port2 -tx_port_sending_traffic_to_self_en false -disable_signature 0 -enable_stream_only_gen 1 -pkts_per_burst 1 -inter_stream_gap_unit bytes -burst_loop_count 30 -transmit_mode continuous -inter_stream_gap 12 -rate_mbps 98 -enable_stream false]
set logged_ret "00:10:94:00:00:02"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\n::sth::mac_convert 01:00:5E:0B:01:02"
set ret [::sth::mac_convert 01:00:5E:0B:01:02]
set logged_ret "01:00:5E:0B:01:02"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::traffic_config -mode create -port_handle port2 -l2_encap ethernet_ii_vlan -vlan_outer_tpid 34984 -vlan_id_outer 2405 -vlan_outer_user_priority 3 -vlan_tpid 33024 -vlan_id 2305 -vlan_user_priority 2 -mac_src 00:10:94:00:00:02 -mac_dst 01:00:5E:0B:01:02 -enable_control_plane 0 -l3_length 4978 -name Test_StreamBlock -fill_type constant -fcs_error 0 -fill_value 0 -frame_size 9100 -traffic_state 1 -high_speed_result_analysis 1 -length_mode fixed -dest_port_list port1 -tx_port_sending_traffic_to_self_en false -disable_signature 0 -enable_stream_only_gen 1 -pkts_per_burst 1 -inter_stream_gap_unit bytes -burst_loop_count 30 -transmit_mode continuous -inter_stream_gap 12 -rate_mbps 98 -enable_stream false"
set ret [sth::traffic_config -mode create -port_handle port2 -l2_encap ethernet_ii_vlan -vlan_outer_tpid 34984 -vlan_id_outer 2405 -vlan_outer_user_priority 3 -vlan_tpid 33024 -vlan_id 2305 -vlan_user_priority 2 -mac_src 00:10:94:00:00:02 -mac_dst 01:00:5E:0B:01:02 -enable_control_plane 0 -l3_length 4978 -name Test_StreamBlock -fill_type constant -fcs_error 0 -fill_value 0 -frame_size 9100 -traffic_state 1 -high_speed_result_analysis 1 -length_mode fixed -dest_port_list port1 -tx_port_sending_traffic_to_self_en false -disable_signature 0 -enable_stream_only_gen 1 -pkts_per_burst 1 -inter_stream_gap_unit bytes -burst_loop_count 30 -transmit_mode continuous -inter_stream_gap 12 -rate_mbps 98 -enable_stream false]
set logged_ret "00:10:94:00:00:02"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\n::sth::mac_convert 01:00:5E:0B:01:02"
set ret [::sth::mac_convert 01:00:5E:0B:01:02]
set logged_ret "01:00:5E:0B:01:02"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::traffic_control -port_handle {port1 port2} -action run -duration 8"
set ret [sth::traffic_control -port_handle {port1 port2} -action run -duration 8]
set logged_ret "{status 1}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::traffic_control -port_handle {port1 port2} -action clear_stats"
set ret [sth::traffic_control -port_handle {port1 port2} -action clear_stats]
set logged_ret "{status 1}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::traffic_control -port_handle {port1 port2} -action run -duration 20"
set ret [sth::traffic_control -port_handle {port1 port2} -action run -duration 20]
set logged_ret "{status 1}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::traffic_stats -port_handle {port1 port2} -mode all"
set ret [sth::traffic_stats -port_handle {port1 port2} -mode all]
set logged_ret "after#1"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nafter 3000"
set ret [after 3000]
set logged_ret "after#2"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret

puts "\nsth::cleanup_session -port_handle {port1 port2} -clean_dbfile 1"
set ret [sth::cleanup_session -port_handle {port1 port2} -clean_dbfile 1]
set logged_ret "{status 1}"
if {$ret ne $logged_ret} {
    puts "<warning>NOT same return value as logged result."
}
puts $ret
