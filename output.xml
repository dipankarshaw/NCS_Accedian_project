<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.6.9 on linux)" generated="20200806 13:25:42.997" rpa="false">
<suite id="s1" name="Dipankar" source="/home/colt123/Dipankar/NCS_Accedian_project/csit/suites/Dipankar.robot">
<test id="s1-t1" name="onnet_CCM_Y1564_test">
<kw name="Onnet CCM Y1564" library="CCA">
<assign>
<var>${test_result}</var>
</assign>
<msg timestamp="20200806 13:26:17.637" level="INFO">****  Logged in node : Accedian_LTS_87
&lt;netmiko.accedian.accedian_ssh.AccedianSSH object at 0x7fd460e9ef98&gt;
****  persing completed on Accedian_LTS_87
&lt;netmiko.accedian.accedian_ssh.AccedianSSH object at 0x7fd460e9ef98&gt;
config term

Thu Aug  6 13:38:34.467 UTC
Current Configuration Session  Line       User     Date                     Lock
00001000-0000237d-00000000     netconf    netconfi Thu Aug  6 07:25:09 2020 
RP/0/RP0/CPU0:ar5.BLB(config)#no interface TenGigE0/0/1/3/2.2301

RP/0/RP0/CPU0:ar5.BLB(config)#no l2vpn xconnect group ALX_NCS_LE-102301

RP/0/RP0/CPU0:ar5.BLB(config)#ethernet cfm domain COLT-1 level 1 id null

RP/0/RP0/CPU0:ar5.BLB(config-cfm-dmn)#no service ALX_NCS_LE-102301

RP/0/RP0/CPU0:ar5.BLB(config-cfm-dmn)#

RP/0/RP0/CPU0:ar5.BLB(config-cfm-dmn)#
config term

RP/0/RP0/CPU0:ar11.BLB(config)#no interface Bundle-Ether112.2301

RP/0/RP0/CPU0:ar11.BLB(config)#no l2vpn xconnect group ALX_NCS_LE-102301

RP/0/RP0/CPU0:ar11.BLB(config)#
policy edit Traffic-5 11 state disable action permit pre-marking green regulator disable monitor disable map1-state disable map2-state disable evc-encapsulation none evc-ethertype c-vlan evc-vlan-id 0 evc-ethertype2 c-vlan evc-vlan-id2 0 cos-mapping preserve map1-type pcp-vlan map2-type pcp-vlan map1-regulator-set disable green-cfi 0 green-pcp 0 yellow-cfi 0 yellow-pcp 0
C122-0787: policy edit Traffic-9 11 state disable action permit pre-marking green regulator disable monitor disable map1-state disable map2-state disable evc-encapsulation none evc-ethertype c-vlan evc-vlan-id 0 evc-ethertype2 c-vlan evc-vlan-id2 0 cos-mapping preserve map1-type pcp-vlan map2-type pcp-vlan map1-regulator-set disable green-cfi 0 green-pcp 0 yellow-cfi 0 yellow-pcp 0
C122-0787: bandwidth-regulator delete regulator U9_ALX/NCS/LE-102301
C122-0787: bandwidth-regulator delete regulator N5_ALX/NCS/LE-102301
C122-0787: vid-set delete N5_ALX/NCS/LE-102301
C122-0787: vid-set delete U9_ALX/NCS/LE-102301
C122-0787: cfm delete meg 1
C122-0787: sa delete service ALX/NCS/LE-102301|1|1|2
C122-0787: cfm unassign interface s-vlan-2401
C122-0787: interface delete s-vlan-2401
C122-0787: 
C122-0787:</msg>
<msg timestamp="20200806 13:26:17.637" level="INFO">${test_result} = {}</msg>
<status status="PASS" starttime="20200806 13:25:44.174" endtime="20200806 13:26:17.637"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${test_result}</arg>
</arguments>
<status status="PASS" starttime="20200806 13:26:17.638" endtime="20200806 13:26:17.639"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>dictionary should not contain value</arg>
<arg>${test_result['ccm_status']}</arg>
<arg>fail</arg>
</arguments>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${test_result['ccm_status']}</arg>
<arg>fail</arg>
</arguments>
<msg timestamp="20200806 13:26:17.641" level="FAIL">Resolving variable '${test_result['ccm_status']}' failed: KeyError: 'ccm_status'</msg>
<status status="FAIL" starttime="20200806 13:26:17.640" endtime="20200806 13:26:17.641"></status>
</kw>
<status status="FAIL" starttime="20200806 13:26:17.639" endtime="20200806 13:26:17.641"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>dictionary should not contain value</arg>
<arg>${test_result['Loop_test']}</arg>
<arg>fail</arg>
</arguments>
<kw name="Dictionary Should Not Contain Value" library="Collections">
<doc>Fails if ``value`` is found from ``dictionary``.</doc>
<arguments>
<arg>${test_result['Loop_test']}</arg>
<arg>fail</arg>
</arguments>
<msg timestamp="20200806 13:26:17.643" level="FAIL">Resolving variable '${test_result['Loop_test']}' failed: KeyError: 'Loop_test'</msg>
<status status="FAIL" starttime="20200806 13:26:17.642" endtime="20200806 13:26:17.643"></status>
</kw>
<status status="FAIL" starttime="20200806 13:26:17.642" endtime="20200806 13:26:17.643"></status>
</kw>
<status status="FAIL" starttime="20200806 13:25:44.173" endtime="20200806 13:26:17.644" critical="yes">Several failures occurred:

1) Resolving variable '${test_result['ccm_status']}' failed: KeyError: 'ccm_status'

2) Resolving variable '${test_result['Loop_test']}' failed: KeyError: 'Loop_test'</status>
</test>
<doc>A test suite with tests for P2P conenctivity between Cisco-Cisco-Accedian
Topology:-
Cisco-Cisco_accedian
</doc>
<metadata>
<item name="Version">1.0
More Info For more information about Robot Framework see http://robotframework.org
Author Sathishkumar murugesan
Date 12 Dec 2017
Executed At HOST
Test Framework Robot Framework Python</item>
</metadata>
<status status="FAIL" starttime="20200806 13:25:42.998" endtime="20200806 13:26:17.646"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="Dipankar">Dipankar</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
